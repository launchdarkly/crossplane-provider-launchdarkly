---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: environments.project.launchdarkly.com
spec:
  group: project.launchdarkly.com
  names:
    categories:
    - crossplane
    - managed
    - launchdarkly
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Environment is the Schema for the Environments API. Provides
          a LaunchDarkly environment resource. This resource allows you to create
          and manage environments in your LaunchDarkly organization. In this case,
          you should always use the nested environments config blocks on your launchdarkly_project
          resource to manage your environments. -> Note: Mixing the use of nested
          environments blocks in the [launchdarkly_project] resource and launchdarkly_environment
          resources is not recommended.'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentSpec defines the desired state of Environment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  approvalSettings:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        autoApplyApprovedChanges:
                          description: |-
                            (Boolean) Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval service kinds other than launchdarkly.
                            Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval service kinds other than `launchdarkly`.
                          type: boolean
                        canApplyDeclinedChanges:
                          description: |-
                            (Boolean) Set to true if changes can be applied as long as the min_num_approvals is met, regardless of whether any reviewers have declined a request. Defaults to true.
                            Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
                          type: boolean
                        canReviewOwnRequest:
                          description: |-
                            (Boolean) Set to true if requesters can approve or decline their own request. They may always comment. Defaults to false.
                            Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
                          type: boolean
                        minNumApprovals:
                          description: |-
                            (Number) The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
                            The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
                          type: number
                        required:
                          description: |-
                            (Boolean) Set to true for changes to flags in this environment to require approval. You may only set required to true if required_approval_tags is not set and vice versa. Defaults to false.
                            Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
                          type: boolean
                        requiredApprovalTags:
                          description: |-
                            (List of String) An array of tags used to specify which flags with those tags require approval. You may only set required_approval_tags if required is set to false and vice versa.
                            An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is set to `false` and vice versa.
                          items:
                            type: string
                          type: array
                        serviceConfig:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The configuration for the service associated with this approval. This is specific to each approval service. For a service_kind of servicenow, the following fields apply:
                            The configuration for the service associated with this approval. This is specific to each approval service. For a `service_kind` of `servicenow`, the following fields apply:


                            - `template` (String) The sys_id of the Standard Change Request Template in ServiceNow that LaunchDarkly will use when creating the change request.
                            - `detail_column` (String) The name of the ServiceNow Change Request column LaunchDarkly uses to populate detailed approval request information. This is most commonly "justification".
                          type: object
                          x-kubernetes-map-type: granular
                        serviceKind:
                          description: |-
                            (String) The kind of service associated with this approval. This determines which platform is used for requesting approval. Valid values are servicenow, launchdarkly. If you use a value other than launchdarkly, you must have already configured the integration in the LaunchDarkly UI or your apply will fail.
                            The kind of service associated with this approval. This determines which platform is used for requesting approval. Valid values are `servicenow`, `launchdarkly`. If you use a value other than `launchdarkly`, you must have already configured the integration in the LaunchDarkly UI or your apply will fail.
                          type: string
                      type: object
                    type: array
                  color:
                    description: |-
                      (String) The color swatch as an RGB hex value with no leading #. For example: 000000
                      The color swatch as an RGB hex value with no leading `#`. For example: `000000`
                    type: string
                  confirmChanges:
                    description: |-
                      (Boolean) Set to true if this environment requires confirmation for flag and segment changes. This field will default to false when not set.
                      Set to `true` if this environment requires confirmation for flag and segment changes. This field will default to `false` when not set.
                    type: boolean
                  critical:
                    description: |-
                      (Boolean) Denotes whether the environment is critical.
                      Denotes whether the environment is critical.
                    type: boolean
                  defaultTrackEvents:
                    description: |-
                      (Boolean) Set to true to enable data export for every flag created in this environment after you configure this argument. This field will default to false when not set. To learn more, read Data Export.
                      Set to `true` to enable data export for every flag created in this environment after you configure this argument. This field will default to `false` when not set. To learn more, read [Data Export](https://docs.launchdarkly.com/home/data-export).
                    type: boolean
                  defaultTtl:
                    description: |-
                      (Number) The TTL for the environment. This must be between 0 and 60 minutes. The TTL setting only applies to environments using the PHP SDK. This field will default to 0 when not set. To learn more, read TTL settings.
                      The TTL for the environment. This must be between 0 and 60 minutes. The TTL setting only applies to environments using the PHP SDK. This field will default to `0` when not set. To learn more, read [TTL settings](https://docs.launchdarkly.com/home/organize/environments#ttl-settings).
                    type: number
                  key:
                    description: |-
                      unique key for the environment. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The project-unique key for the environment. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  name:
                    description: |-
                      (String) The name of the environment.
                      The name of the environment.
                    type: string
                  projectKey:
                    description: |-
                      (String) The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  projectKeyRef:
                    description: Reference to a Project in project to populate projectKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectKeySelector:
                    description: Selector for a Project in project to populate projectKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireComments:
                    description: |-
                      (Boolean) Set to true if this environment requires comments for flag and segment changes. This field will default to false when not set.
                      Set to `true` if this environment requires comments for flag and segment changes. This field will default to `false` when not set.
                    type: boolean
                  secureMode:
                    description: |-
                      side SDK cannot impersonate another user. This field will default to false when not set.
                      Set to `true` to ensure a user of the client-side SDK cannot impersonate another user. This field will default to `false` when not set.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) Tags associated with your resource.
                      Tags associated with your resource.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  approvalSettings:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        autoApplyApprovedChanges:
                          description: |-
                            (Boolean) Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval service kinds other than launchdarkly.
                            Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval service kinds other than `launchdarkly`.
                          type: boolean
                        canApplyDeclinedChanges:
                          description: |-
                            (Boolean) Set to true if changes can be applied as long as the min_num_approvals is met, regardless of whether any reviewers have declined a request. Defaults to true.
                            Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
                          type: boolean
                        canReviewOwnRequest:
                          description: |-
                            (Boolean) Set to true if requesters can approve or decline their own request. They may always comment. Defaults to false.
                            Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
                          type: boolean
                        minNumApprovals:
                          description: |-
                            (Number) The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
                            The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
                          type: number
                        required:
                          description: |-
                            (Boolean) Set to true for changes to flags in this environment to require approval. You may only set required to true if required_approval_tags is not set and vice versa. Defaults to false.
                            Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
                          type: boolean
                        requiredApprovalTags:
                          description: |-
                            (List of String) An array of tags used to specify which flags with those tags require approval. You may only set required_approval_tags if required is set to false and vice versa.
                            An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is set to `false` and vice versa.
                          items:
                            type: string
                          type: array
                        serviceConfig:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The configuration for the service associated with this approval. This is specific to each approval service. For a service_kind of servicenow, the following fields apply:
                            The configuration for the service associated with this approval. This is specific to each approval service. For a `service_kind` of `servicenow`, the following fields apply:


                            - `template` (String) The sys_id of the Standard Change Request Template in ServiceNow that LaunchDarkly will use when creating the change request.
                            - `detail_column` (String) The name of the ServiceNow Change Request column LaunchDarkly uses to populate detailed approval request information. This is most commonly "justification".
                          type: object
                          x-kubernetes-map-type: granular
                        serviceKind:
                          description: |-
                            (String) The kind of service associated with this approval. This determines which platform is used for requesting approval. Valid values are servicenow, launchdarkly. If you use a value other than launchdarkly, you must have already configured the integration in the LaunchDarkly UI or your apply will fail.
                            The kind of service associated with this approval. This determines which platform is used for requesting approval. Valid values are `servicenow`, `launchdarkly`. If you use a value other than `launchdarkly`, you must have already configured the integration in the LaunchDarkly UI or your apply will fail.
                          type: string
                      type: object
                    type: array
                  color:
                    description: |-
                      (String) The color swatch as an RGB hex value with no leading #. For example: 000000
                      The color swatch as an RGB hex value with no leading `#`. For example: `000000`
                    type: string
                  confirmChanges:
                    description: |-
                      (Boolean) Set to true if this environment requires confirmation for flag and segment changes. This field will default to false when not set.
                      Set to `true` if this environment requires confirmation for flag and segment changes. This field will default to `false` when not set.
                    type: boolean
                  critical:
                    description: |-
                      (Boolean) Denotes whether the environment is critical.
                      Denotes whether the environment is critical.
                    type: boolean
                  defaultTrackEvents:
                    description: |-
                      (Boolean) Set to true to enable data export for every flag created in this environment after you configure this argument. This field will default to false when not set. To learn more, read Data Export.
                      Set to `true` to enable data export for every flag created in this environment after you configure this argument. This field will default to `false` when not set. To learn more, read [Data Export](https://docs.launchdarkly.com/home/data-export).
                    type: boolean
                  defaultTtl:
                    description: |-
                      (Number) The TTL for the environment. This must be between 0 and 60 minutes. The TTL setting only applies to environments using the PHP SDK. This field will default to 0 when not set. To learn more, read TTL settings.
                      The TTL for the environment. This must be between 0 and 60 minutes. The TTL setting only applies to environments using the PHP SDK. This field will default to `0` when not set. To learn more, read [TTL settings](https://docs.launchdarkly.com/home/organize/environments#ttl-settings).
                    type: number
                  key:
                    description: |-
                      unique key for the environment. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The project-unique key for the environment. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  name:
                    description: |-
                      (String) The name of the environment.
                      The name of the environment.
                    type: string
                  projectKey:
                    description: |-
                      (String) The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  projectKeyRef:
                    description: Reference to a Project in project to populate projectKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectKeySelector:
                    description: Selector for a Project in project to populate projectKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireComments:
                    description: |-
                      (Boolean) Set to true if this environment requires comments for flag and segment changes. This field will default to false when not set.
                      Set to `true` if this environment requires comments for flag and segment changes. This field will default to `false` when not set.
                    type: boolean
                  secureMode:
                    description: |-
                      side SDK cannot impersonate another user. This field will default to false when not set.
                      Set to `true` to ensure a user of the client-side SDK cannot impersonate another user. This field will default to `false` when not set.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) Tags associated with your resource.
                      Tags associated with your resource.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.color is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.color)
                || (has(self.initProvider) && has(self.initProvider.color))'
            - message: spec.forProvider.key is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.key)
                || (has(self.initProvider) && has(self.initProvider.key))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: EnvironmentStatus defines the observed state of Environment.
            properties:
              atProvider:
                properties:
                  approvalSettings:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        autoApplyApprovedChanges:
                          description: |-
                            (Boolean) Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval service kinds other than launchdarkly.
                            Automatically apply changes that have been approved by all reviewers. This field is only applicable for approval service kinds other than `launchdarkly`.
                          type: boolean
                        canApplyDeclinedChanges:
                          description: |-
                            (Boolean) Set to true if changes can be applied as long as the min_num_approvals is met, regardless of whether any reviewers have declined a request. Defaults to true.
                            Set to `true` if changes can be applied as long as the `min_num_approvals` is met, regardless of whether any reviewers have declined a request. Defaults to `true`.
                          type: boolean
                        canReviewOwnRequest:
                          description: |-
                            (Boolean) Set to true if requesters can approve or decline their own request. They may always comment. Defaults to false.
                            Set to `true` if requesters can approve or decline their own request. They may always comment. Defaults to `false`.
                          type: boolean
                        minNumApprovals:
                          description: |-
                            (Number) The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
                            The number of approvals required before an approval request can be applied. This number must be between 1 and 5. Defaults to 1.
                          type: number
                        required:
                          description: |-
                            (Boolean) Set to true for changes to flags in this environment to require approval. You may only set required to true if required_approval_tags is not set and vice versa. Defaults to false.
                            Set to `true` for changes to flags in this environment to require approval. You may only set `required` to true if `required_approval_tags` is not set and vice versa. Defaults to `false`.
                          type: boolean
                        requiredApprovalTags:
                          description: |-
                            (List of String) An array of tags used to specify which flags with those tags require approval. You may only set required_approval_tags if required is set to false and vice versa.
                            An array of tags used to specify which flags with those tags require approval. You may only set `required_approval_tags` if `required` is set to `false` and vice versa.
                          items:
                            type: string
                          type: array
                        serviceConfig:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The configuration for the service associated with this approval. This is specific to each approval service. For a service_kind of servicenow, the following fields apply:
                            The configuration for the service associated with this approval. This is specific to each approval service. For a `service_kind` of `servicenow`, the following fields apply:


                            - `template` (String) The sys_id of the Standard Change Request Template in ServiceNow that LaunchDarkly will use when creating the change request.
                            - `detail_column` (String) The name of the ServiceNow Change Request column LaunchDarkly uses to populate detailed approval request information. This is most commonly "justification".
                          type: object
                          x-kubernetes-map-type: granular
                        serviceKind:
                          description: |-
                            (String) The kind of service associated with this approval. This determines which platform is used for requesting approval. Valid values are servicenow, launchdarkly. If you use a value other than launchdarkly, you must have already configured the integration in the LaunchDarkly UI or your apply will fail.
                            The kind of service associated with this approval. This determines which platform is used for requesting approval. Valid values are `servicenow`, `launchdarkly`. If you use a value other than `launchdarkly`, you must have already configured the integration in the LaunchDarkly UI or your apply will fail.
                          type: string
                      type: object
                    type: array
                  color:
                    description: |-
                      (String) The color swatch as an RGB hex value with no leading #. For example: 000000
                      The color swatch as an RGB hex value with no leading `#`. For example: `000000`
                    type: string
                  confirmChanges:
                    description: |-
                      (Boolean) Set to true if this environment requires confirmation for flag and segment changes. This field will default to false when not set.
                      Set to `true` if this environment requires confirmation for flag and segment changes. This field will default to `false` when not set.
                    type: boolean
                  critical:
                    description: |-
                      (Boolean) Denotes whether the environment is critical.
                      Denotes whether the environment is critical.
                    type: boolean
                  defaultTrackEvents:
                    description: |-
                      (Boolean) Set to true to enable data export for every flag created in this environment after you configure this argument. This field will default to false when not set. To learn more, read Data Export.
                      Set to `true` to enable data export for every flag created in this environment after you configure this argument. This field will default to `false` when not set. To learn more, read [Data Export](https://docs.launchdarkly.com/home/data-export).
                    type: boolean
                  defaultTtl:
                    description: |-
                      (Number) The TTL for the environment. This must be between 0 and 60 minutes. The TTL setting only applies to environments using the PHP SDK. This field will default to 0 when not set. To learn more, read TTL settings.
                      The TTL for the environment. This must be between 0 and 60 minutes. The TTL setting only applies to environments using the PHP SDK. This field will default to `0` when not set. To learn more, read [TTL settings](https://docs.launchdarkly.com/home/organize/environments#ttl-settings).
                    type: number
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  key:
                    description: |-
                      unique key for the environment. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The project-unique key for the environment. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  name:
                    description: |-
                      (String) The name of the environment.
                      The name of the environment.
                    type: string
                  projectKey:
                    description: |-
                      (String) The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  requireComments:
                    description: |-
                      (Boolean) Set to true if this environment requires comments for flag and segment changes. This field will default to false when not set.
                      Set to `true` if this environment requires comments for flag and segment changes. This field will default to `false` when not set.
                    type: boolean
                  secureMode:
                    description: |-
                      side SDK cannot impersonate another user. This field will default to false when not set.
                      Set to `true` to ensure a user of the client-side SDK cannot impersonate another user. This field will default to `false` when not set.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) Tags associated with your resource.
                      Tags associated with your resource.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
