---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: featureflagenvironments.flag.launchdarkly.com
spec:
  group: flag.launchdarkly.com
  names:
    categories:
    - crossplane
    - managed
    - launchdarkly
    kind: FeatureFlagEnvironment
    listKind: FeatureFlagEnvironmentList
    plural: featureflagenvironments
    singular: featureflagenvironment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FeatureFlagEnvironment is the Schema for the FeatureFlagEnvironments
          API. Provides a LaunchDarkly environment-specific feature flag resource.
          This resource allows you to create and manage environment-specific feature
          flags attributes within your LaunchDarkly organization. Subsequent applies
          may overwrite the changes made by experiments and break your experiment.
          An alternate workaround is to use the lifecycle.ignore_changes https://developer.hashicorp.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FeatureFlagEnvironmentSpec defines the desired state of FeatureFlagEnvironment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  contextTargets:
                    description: |-
                      user context kinds for each variation. (see below for nested schema)
                      The set of nested blocks describing the individual targets for non-user context kinds for each variation.
                    items:
                      properties:
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind on which the flag should target in this environment. User (`user`) targets should be specified as `targets` attribute blocks.
                          type: string
                        values:
                          description: |-
                            (List of String) List of user strings to target.
                            List of `user` strings to target.
                          items:
                            type: string
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the variation to serve if a user target value is matched.
                          type: number
                      type: object
                    type: array
                  envKey:
                    description: |-
                      (String) The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  envKeyRef:
                    description: Reference to a Environment in project to populate
                      envKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  envKeySelector:
                    description: Selector for a Environment in project to populate
                      envKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  fallthrough:
                    description: |-
                      (Block List, Min: 1, Max: 1) Nested block describing the default variation to serve if no prerequisites, target, or rules apply. (see below for nested schema)
                      Nested block describing the default variation to serve if no `prerequisites`, `target`, or `rules` apply.
                    items:
                      properties:
                        bucketBy:
                          description: |-
                            (String) Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                            Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                          type: string
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to `user`.
                          type: string
                        rolloutWeights:
                          description: |-
                            (List of Number) List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to true. The sum of the rollout_weights must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either variation or rollout_weights.
                            List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
                          items:
                            type: number
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The default integer variation index to serve if no `prerequisites`, `target`, or `rules` apply. You must specify either `variation` or `rollout_weights`.
                          type: number
                      type: object
                    type: array
                  flagId:
                    description: |-
                      (String) The feature flag's unique id in the format project_key/flag_key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The feature flag's unique `id` in the format `project_key/flag_key`. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  flagIdRef:
                    description: Reference to a FeatureFlag in flag to populate flagId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  flagIdSelector:
                    description: Selector for a FeatureFlag in flag to populate flagId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  offVariation:
                    description: |-
                      (Number) The index of the variation to serve if targeting is disabled.
                      The index of the variation to serve if targeting is disabled.
                    type: number
                  "on":
                    description: |-
                      (Boolean) Whether targeting is enabled. Defaults to false if not set.
                      Whether targeting is enabled. Defaults to `false` if not set.
                    type: boolean
                  prerequisites:
                    description: |-
                      (Block List) List of nested blocks describing prerequisite feature flags rules. (see below for nested schema)
                      List of nested blocks describing prerequisite feature flags rules.
                    items:
                      properties:
                        flagKey:
                          description: |-
                            (String) The prerequisite feature flag's key.
                            The prerequisite feature flag's `key`.
                          type: string
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the prerequisite feature flag's variation to target.
                          type: number
                      type: object
                    type: array
                  rules:
                    description: |-
                      (Block List) List of logical targeting rules. (see below for nested schema)
                      List of logical targeting rules.
                    items:
                      properties:
                        bucketBy:
                          description: |-
                            (String) Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                            Group percentage rollout by a custom attribute. This argument is only valid if `rollout_weights` is also specified.
                          type: string
                        clauses:
                          description: |-
                            (Block List) List of nested blocks specifying the logical clauses to evaluate (see below for nested schema)
                            List of nested blocks specifying the logical clauses to evaluate
                          items:
                            properties:
                              attribute:
                                description: |-
                                  (String) The user attribute to operate on
                                  The user attribute to operate on
                                type: string
                              contextKind:
                                description: |-
                                  (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                                  The context kind associated with this rule clause. If omitted, defaults to `user`.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) Whether to negate the rule clause.
                                  Whether to negate the rule clause.
                                type: boolean
                              op:
                                description: |-
                                  (String) The operator associated with the rule clause. Available options are in, endsWith, startsWith, matches, contains, lessThan, lessThanOrEqual, greaterThanOrEqual, before, after, segmentMatch, semVerEqual, semVerLessThan, and semVerGreaterThan. Read LaunchDarkly's Operators documentation for more information.
                                  The operator associated with the rule clause. Available options are `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`. Read LaunchDarkly's [Operators](https://docs.launchdarkly.com/sdk/concepts/flag-evaluation-rules#operators) documentation for more information.
                                type: string
                              valueType:
                                description: |-
                                  (String) The type for each of the clause's values. Available types are boolean, string, and number. If omitted, value_type defaults to string.
                                  The type for each of the clause's values. Available types are `boolean`, `string`, and `number`. If omitted, `value_type` defaults to `string`.
                                type: string
                              values:
                                description: |-
                                  (List of String) List of user strings to target.
                                  The list of values associated with the rule clause.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind associated with the specified rollout. This argument is only valid if `rollout_weights` is also specified. Defaults to `user` if omitted.
                          type: string
                        description:
                          description: |-
                            readable description of the targeting rule.
                            A human-readable description of the targeting rule.
                          type: string
                        rolloutWeights:
                          description: |-
                            (List of Number) List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to true. The sum of the rollout_weights must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either variation or rollout_weights.
                            List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
                          items:
                            type: number
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The integer variation index to serve if the rule clauses evaluate to `true`. You must specify either `variation` or `rollout_weights`
                          type: number
                      type: object
                    type: array
                  targets:
                    description: |-
                      (Block Set) Set of nested blocks describing the individual user targets for each variation. (see below for nested schema)
                      Set of nested blocks describing the individual user targets for each variation.
                    items:
                      properties:
                        values:
                          description: |-
                            (List of String) List of user strings to target.
                            List of `user` strings to target.
                          items:
                            type: string
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the variation to serve if a user target value is matched.
                          type: number
                      type: object
                    type: array
                  trackEvents:
                    description: |-
                      (Boolean) Whether to send event data back to LaunchDarkly. Defaults to false if not set.
                      Whether to send event data back to LaunchDarkly. Defaults to `false` if not set.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  contextTargets:
                    description: |-
                      user context kinds for each variation. (see below for nested schema)
                      The set of nested blocks describing the individual targets for non-user context kinds for each variation.
                    items:
                      properties:
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind on which the flag should target in this environment. User (`user`) targets should be specified as `targets` attribute blocks.
                          type: string
                        values:
                          description: |-
                            (List of String) List of user strings to target.
                            List of `user` strings to target.
                          items:
                            type: string
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the variation to serve if a user target value is matched.
                          type: number
                      type: object
                    type: array
                  envKey:
                    description: |-
                      (String) The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  envKeyRef:
                    description: Reference to a Environment in project to populate
                      envKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  envKeySelector:
                    description: Selector for a Environment in project to populate
                      envKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  fallthrough:
                    description: |-
                      (Block List, Min: 1, Max: 1) Nested block describing the default variation to serve if no prerequisites, target, or rules apply. (see below for nested schema)
                      Nested block describing the default variation to serve if no `prerequisites`, `target`, or `rules` apply.
                    items:
                      properties:
                        bucketBy:
                          description: |-
                            (String) Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                            Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                          type: string
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to `user`.
                          type: string
                        rolloutWeights:
                          description: |-
                            (List of Number) List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to true. The sum of the rollout_weights must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either variation or rollout_weights.
                            List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
                          items:
                            type: number
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The default integer variation index to serve if no `prerequisites`, `target`, or `rules` apply. You must specify either `variation` or `rollout_weights`.
                          type: number
                      type: object
                    type: array
                  flagId:
                    description: |-
                      (String) The feature flag's unique id in the format project_key/flag_key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The feature flag's unique `id` in the format `project_key/flag_key`. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  flagIdRef:
                    description: Reference to a FeatureFlag in flag to populate flagId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  flagIdSelector:
                    description: Selector for a FeatureFlag in flag to populate flagId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  offVariation:
                    description: |-
                      (Number) The index of the variation to serve if targeting is disabled.
                      The index of the variation to serve if targeting is disabled.
                    type: number
                  "on":
                    description: |-
                      (Boolean) Whether targeting is enabled. Defaults to false if not set.
                      Whether targeting is enabled. Defaults to `false` if not set.
                    type: boolean
                  prerequisites:
                    description: |-
                      (Block List) List of nested blocks describing prerequisite feature flags rules. (see below for nested schema)
                      List of nested blocks describing prerequisite feature flags rules.
                    items:
                      properties:
                        flagKey:
                          description: |-
                            (String) The prerequisite feature flag's key.
                            The prerequisite feature flag's `key`.
                          type: string
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the prerequisite feature flag's variation to target.
                          type: number
                      type: object
                    type: array
                  rules:
                    description: |-
                      (Block List) List of logical targeting rules. (see below for nested schema)
                      List of logical targeting rules.
                    items:
                      properties:
                        bucketBy:
                          description: |-
                            (String) Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                            Group percentage rollout by a custom attribute. This argument is only valid if `rollout_weights` is also specified.
                          type: string
                        clauses:
                          description: |-
                            (Block List) List of nested blocks specifying the logical clauses to evaluate (see below for nested schema)
                            List of nested blocks specifying the logical clauses to evaluate
                          items:
                            properties:
                              attribute:
                                description: |-
                                  (String) The user attribute to operate on
                                  The user attribute to operate on
                                type: string
                              contextKind:
                                description: |-
                                  (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                                  The context kind associated with this rule clause. If omitted, defaults to `user`.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) Whether to negate the rule clause.
                                  Whether to negate the rule clause.
                                type: boolean
                              op:
                                description: |-
                                  (String) The operator associated with the rule clause. Available options are in, endsWith, startsWith, matches, contains, lessThan, lessThanOrEqual, greaterThanOrEqual, before, after, segmentMatch, semVerEqual, semVerLessThan, and semVerGreaterThan. Read LaunchDarkly's Operators documentation for more information.
                                  The operator associated with the rule clause. Available options are `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`. Read LaunchDarkly's [Operators](https://docs.launchdarkly.com/sdk/concepts/flag-evaluation-rules#operators) documentation for more information.
                                type: string
                              valueType:
                                description: |-
                                  (String) The type for each of the clause's values. Available types are boolean, string, and number. If omitted, value_type defaults to string.
                                  The type for each of the clause's values. Available types are `boolean`, `string`, and `number`. If omitted, `value_type` defaults to `string`.
                                type: string
                              values:
                                description: |-
                                  (List of String) List of user strings to target.
                                  The list of values associated with the rule clause.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind associated with the specified rollout. This argument is only valid if `rollout_weights` is also specified. Defaults to `user` if omitted.
                          type: string
                        description:
                          description: |-
                            readable description of the targeting rule.
                            A human-readable description of the targeting rule.
                          type: string
                        rolloutWeights:
                          description: |-
                            (List of Number) List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to true. The sum of the rollout_weights must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either variation or rollout_weights.
                            List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
                          items:
                            type: number
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The integer variation index to serve if the rule clauses evaluate to `true`. You must specify either `variation` or `rollout_weights`
                          type: number
                      type: object
                    type: array
                  targets:
                    description: |-
                      (Block Set) Set of nested blocks describing the individual user targets for each variation. (see below for nested schema)
                      Set of nested blocks describing the individual user targets for each variation.
                    items:
                      properties:
                        values:
                          description: |-
                            (List of String) List of user strings to target.
                            List of `user` strings to target.
                          items:
                            type: string
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the variation to serve if a user target value is matched.
                          type: number
                      type: object
                    type: array
                  trackEvents:
                    description: |-
                      (Boolean) Whether to send event data back to LaunchDarkly. Defaults to false if not set.
                      Whether to send event data back to LaunchDarkly. Defaults to `false` if not set.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.fallthrough is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.fallthrough)
                || (has(self.initProvider) && has(self.initProvider.fallthrough))'
            - message: spec.forProvider.offVariation is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.offVariation)
                || (has(self.initProvider) && has(self.initProvider.offVariation))'
          status:
            description: FeatureFlagEnvironmentStatus defines the observed state of
              FeatureFlagEnvironment.
            properties:
              atProvider:
                properties:
                  contextTargets:
                    description: |-
                      user context kinds for each variation. (see below for nested schema)
                      The set of nested blocks describing the individual targets for non-user context kinds for each variation.
                    items:
                      properties:
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind on which the flag should target in this environment. User (`user`) targets should be specified as `targets` attribute blocks.
                          type: string
                        values:
                          description: |-
                            (List of String) List of user strings to target.
                            List of `user` strings to target.
                          items:
                            type: string
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the variation to serve if a user target value is matched.
                          type: number
                      type: object
                    type: array
                  envKey:
                    description: |-
                      (String) The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  fallthrough:
                    description: |-
                      (Block List, Min: 1, Max: 1) Nested block describing the default variation to serve if no prerequisites, target, or rules apply. (see below for nested schema)
                      Nested block describing the default variation to serve if no `prerequisites`, `target`, or `rules` apply.
                    items:
                      properties:
                        bucketBy:
                          description: |-
                            (String) Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                            Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                          type: string
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to `user`.
                          type: string
                        rolloutWeights:
                          description: |-
                            (List of Number) List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to true. The sum of the rollout_weights must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either variation or rollout_weights.
                            List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
                          items:
                            type: number
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The default integer variation index to serve if no `prerequisites`, `target`, or `rules` apply. You must specify either `variation` or `rollout_weights`.
                          type: number
                      type: object
                    type: array
                  flagId:
                    description: |-
                      (String) The feature flag's unique id in the format project_key/flag_key. A change in this field will force the destruction of the existing resource and the creation of a new one.
                      The feature flag's unique `id` in the format `project_key/flag_key`. A change in this field will force the destruction of the existing resource and the creation of a new one.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  offVariation:
                    description: |-
                      (Number) The index of the variation to serve if targeting is disabled.
                      The index of the variation to serve if targeting is disabled.
                    type: number
                  "on":
                    description: |-
                      (Boolean) Whether targeting is enabled. Defaults to false if not set.
                      Whether targeting is enabled. Defaults to `false` if not set.
                    type: boolean
                  prerequisites:
                    description: |-
                      (Block List) List of nested blocks describing prerequisite feature flags rules. (see below for nested schema)
                      List of nested blocks describing prerequisite feature flags rules.
                    items:
                      properties:
                        flagKey:
                          description: |-
                            (String) The prerequisite feature flag's key.
                            The prerequisite feature flag's `key`.
                          type: string
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the prerequisite feature flag's variation to target.
                          type: number
                      type: object
                    type: array
                  rules:
                    description: |-
                      (Block List) List of logical targeting rules. (see below for nested schema)
                      List of logical targeting rules.
                    items:
                      properties:
                        bucketBy:
                          description: |-
                            (String) Group percentage rollout by a custom attribute. This argument is only valid if rollout_weights is also specified.
                            Group percentage rollout by a custom attribute. This argument is only valid if `rollout_weights` is also specified.
                          type: string
                        clauses:
                          description: |-
                            (Block List) List of nested blocks specifying the logical clauses to evaluate (see below for nested schema)
                            List of nested blocks specifying the logical clauses to evaluate
                          items:
                            properties:
                              attribute:
                                description: |-
                                  (String) The user attribute to operate on
                                  The user attribute to operate on
                                type: string
                              contextKind:
                                description: |-
                                  (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                                  The context kind associated with this rule clause. If omitted, defaults to `user`.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) Whether to negate the rule clause.
                                  Whether to negate the rule clause.
                                type: boolean
                              op:
                                description: |-
                                  (String) The operator associated with the rule clause. Available options are in, endsWith, startsWith, matches, contains, lessThan, lessThanOrEqual, greaterThanOrEqual, before, after, segmentMatch, semVerEqual, semVerLessThan, and semVerGreaterThan. Read LaunchDarkly's Operators documentation for more information.
                                  The operator associated with the rule clause. Available options are `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`. Read LaunchDarkly's [Operators](https://docs.launchdarkly.com/sdk/concepts/flag-evaluation-rules#operators) documentation for more information.
                                type: string
                              valueType:
                                description: |-
                                  (String) The type for each of the clause's values. Available types are boolean, string, and number. If omitted, value_type defaults to string.
                                  The type for each of the clause's values. Available types are `boolean`, `string`, and `number`. If omitted, `value_type` defaults to `string`.
                                type: string
                              values:
                                description: |-
                                  (List of String) List of user strings to target.
                                  The list of values associated with the rule clause.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        contextKind:
                          description: |-
                            (String) The context kind associated with the specified rollout. This argument is only valid if rollout_weights is also specified. If omitted, defaults to user.
                            The context kind associated with the specified rollout. This argument is only valid if `rollout_weights` is also specified. Defaults to `user` if omitted.
                          type: string
                        description:
                          description: |-
                            readable description of the targeting rule.
                            A human-readable description of the targeting rule.
                          type: string
                        rolloutWeights:
                          description: |-
                            (List of Number) List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to true. The sum of the rollout_weights must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either variation or rollout_weights.
                            List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
                          items:
                            type: number
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The integer variation index to serve if the rule clauses evaluate to `true`. You must specify either `variation` or `rollout_weights`
                          type: number
                      type: object
                    type: array
                  targets:
                    description: |-
                      (Block Set) Set of nested blocks describing the individual user targets for each variation. (see below for nested schema)
                      Set of nested blocks describing the individual user targets for each variation.
                    items:
                      properties:
                        values:
                          description: |-
                            (List of String) List of user strings to target.
                            List of `user` strings to target.
                          items:
                            type: string
                          type: array
                        variation:
                          description: |-
                            (Number) The default integer variation index to serve if no prerequisites, target, or rules apply. You must specify either variation or rollout_weights.
                            The index of the variation to serve if a user target value is matched.
                          type: number
                      type: object
                    type: array
                  trackEvents:
                    description: |-
                      (Boolean) Whether to send event data back to LaunchDarkly. Defaults to false if not set.
                      Whether to send event data back to LaunchDarkly. Defaults to `false` if not set.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
