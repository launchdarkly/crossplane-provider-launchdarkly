// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MetricInitParameters struct {

	// (String) The method for analyzing metric events. Available choices are mean and percentile.
	// The method for analyzing metric events. Available choices are `mean` and `percentile`.
	AnalysisType *string `json:"analysisType,omitempty" tf:"analysis_type,omitempty"`

	// (String) The description of the metric's purpose.
	// The description of the metric's purpose.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The event key for your metric (if custom metric)
	// The event key for your metric (if custom metric)
	EventKey *string `json:"eventKey,omitempty" tf:"event_key,omitempty"`

	// (Boolean) Include units that did not send any events and set their value to 0.
	// Include units that did not send any events and set their value to 0.
	IncludeUnitsWithoutEvents *bool `json:"includeUnitsWithoutEvents,omitempty" tf:"include_units_without_events,omitempty"`

	// (Boolean, Deprecated) Ignored. All metrics are considered active.
	// Ignored. All metrics are considered active.
	IsActive *bool `json:"isActive,omitempty" tf:"is_active,omitempty"`

	// (Boolean) Whether a custom metric is a numeric metric or not.
	// Whether a `custom` metric is a numeric metric or not.
	IsNumeric *bool `json:"isNumeric,omitempty" tf:"is_numeric,omitempty"`

	// (String) The unique key that references the metric. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The unique key that references the metric. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The metric type. Available choices are click, custom, and pageview. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The metric type. Available choices are `click`, `custom`, and `pageview`. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// set maintainer
	// The LaunchDarkly member ID of the member who will maintain the metric
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/account/v1alpha1.TeamMember
	MaintainerID *string `json:"maintainerId,omitempty" tf:"maintainer_id,omitempty"`

	// Reference to a TeamMember in account to populate maintainerId.
	// +kubebuilder:validation:Optional
	MaintainerIDRef *v1.Reference `json:"maintainerIdRef,omitempty" tf:"-"`

	// Selector for a TeamMember in account to populate maintainerId.
	// +kubebuilder:validation:Optional
	MaintainerIDSelector *v1.Selector `json:"maintainerIdSelector,omitempty" tf:"-"`

	// friendly name for the metric.
	// The human-friendly name for the metric.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when analysis_type is percentile.
	// The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when analysis_type is percentile.
	PercentileValue *float64 `json:"percentileValue,omitempty" tf:"percentile_value,omitempty"`

	// (String) The metrics's project key. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The metrics's project key. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/project/v1alpha1.Project
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// Reference to a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeyRef *v1.Reference `json:"projectKeyRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeySelector *v1.Selector `json:"projectKeySelector,omitempty" tf:"-"`

	// (Set of String) A set of one or more context kinds that this metric can measure events from. Metrics can only use context kinds marked as "Available for experiments." For more information, read Allocating experiment audiences.
	// A set of one or more context kinds that this metric can measure events from. Metrics can only use context kinds marked as "Available for experiments." For more information, read [Allocating experiment audiences](https://docs.launchdarkly.com/home/creating-experiments/allocation).
	// +listType=set
	RandomizationUnits []*string `json:"randomizationUnits,omitempty" tf:"randomization_units,omitempty"`

	// (String) The CSS selector for your metric (if click metric)
	// The CSS selector for your metric (if click metric)
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`

	// (String) The success criteria for your metric (if numeric metric). Available choices are HigherThanBaseline and LowerThanBaseline.
	// The success criteria for your metric (if numeric metric). Available choices are `HigherThanBaseline` and `LowerThanBaseline`.
	SuccessCriteria *string `json:"successCriteria,omitempty" tf:"success_criteria,omitempty"`

	// (Set of String) Tags associated with your resource.
	// Tags associated with your resource.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (String)  The unit for numeric custom metrics.
	// (Required for kind `custom`) The unit for numeric `custom` metrics.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) The method by which multiple unit event values are aggregated. Available choices are average and sum.
	// The method by which multiple unit event values are aggregated. Available choices are `average` and `sum`.
	UnitAggregationType *string `json:"unitAggregationType,omitempty" tf:"unit_aggregation_type,omitempty"`

	// (Block List) List of nested url blocks describing URLs that you want to associate with the metric. (see below for nested schema)
	// List of nested `url` blocks describing URLs that you want to associate with the metric.
	Urls []UrlsInitParameters `json:"urls,omitempty" tf:"urls,omitempty"`
}

type MetricObservation struct {

	// (String) The method for analyzing metric events. Available choices are mean and percentile.
	// The method for analyzing metric events. Available choices are `mean` and `percentile`.
	AnalysisType *string `json:"analysisType,omitempty" tf:"analysis_type,omitempty"`

	// (String) The description of the metric's purpose.
	// The description of the metric's purpose.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The event key for your metric (if custom metric)
	// The event key for your metric (if custom metric)
	EventKey *string `json:"eventKey,omitempty" tf:"event_key,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Include units that did not send any events and set their value to 0.
	// Include units that did not send any events and set their value to 0.
	IncludeUnitsWithoutEvents *bool `json:"includeUnitsWithoutEvents,omitempty" tf:"include_units_without_events,omitempty"`

	// (Boolean, Deprecated) Ignored. All metrics are considered active.
	// Ignored. All metrics are considered active.
	IsActive *bool `json:"isActive,omitempty" tf:"is_active,omitempty"`

	// (Boolean) Whether a custom metric is a numeric metric or not.
	// Whether a `custom` metric is a numeric metric or not.
	IsNumeric *bool `json:"isNumeric,omitempty" tf:"is_numeric,omitempty"`

	// (String) The unique key that references the metric. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The unique key that references the metric. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The metric type. Available choices are click, custom, and pageview. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The metric type. Available choices are `click`, `custom`, and `pageview`. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// set maintainer
	// The LaunchDarkly member ID of the member who will maintain the metric
	MaintainerID *string `json:"maintainerId,omitempty" tf:"maintainer_id,omitempty"`

	// friendly name for the metric.
	// The human-friendly name for the metric.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when analysis_type is percentile.
	// The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when analysis_type is percentile.
	PercentileValue *float64 `json:"percentileValue,omitempty" tf:"percentile_value,omitempty"`

	// (String) The metrics's project key. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The metrics's project key. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// (Set of String) A set of one or more context kinds that this metric can measure events from. Metrics can only use context kinds marked as "Available for experiments." For more information, read Allocating experiment audiences.
	// A set of one or more context kinds that this metric can measure events from. Metrics can only use context kinds marked as "Available for experiments." For more information, read [Allocating experiment audiences](https://docs.launchdarkly.com/home/creating-experiments/allocation).
	// +listType=set
	RandomizationUnits []*string `json:"randomizationUnits,omitempty" tf:"randomization_units,omitempty"`

	// (String) The CSS selector for your metric (if click metric)
	// The CSS selector for your metric (if click metric)
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`

	// (String) The success criteria for your metric (if numeric metric). Available choices are HigherThanBaseline and LowerThanBaseline.
	// The success criteria for your metric (if numeric metric). Available choices are `HigherThanBaseline` and `LowerThanBaseline`.
	SuccessCriteria *string `json:"successCriteria,omitempty" tf:"success_criteria,omitempty"`

	// (Set of String) Tags associated with your resource.
	// Tags associated with your resource.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (String)  The unit for numeric custom metrics.
	// (Required for kind `custom`) The unit for numeric `custom` metrics.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) The method by which multiple unit event values are aggregated. Available choices are average and sum.
	// The method by which multiple unit event values are aggregated. Available choices are `average` and `sum`.
	UnitAggregationType *string `json:"unitAggregationType,omitempty" tf:"unit_aggregation_type,omitempty"`

	// (Block List) List of nested url blocks describing URLs that you want to associate with the metric. (see below for nested schema)
	// List of nested `url` blocks describing URLs that you want to associate with the metric.
	Urls []UrlsObservation `json:"urls,omitempty" tf:"urls,omitempty"`

	// (Number) Version of the metric
	// Version of the metric
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type MetricParameters struct {

	// (String) The method for analyzing metric events. Available choices are mean and percentile.
	// The method for analyzing metric events. Available choices are `mean` and `percentile`.
	// +kubebuilder:validation:Optional
	AnalysisType *string `json:"analysisType,omitempty" tf:"analysis_type,omitempty"`

	// (String) The description of the metric's purpose.
	// The description of the metric's purpose.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The event key for your metric (if custom metric)
	// The event key for your metric (if custom metric)
	// +kubebuilder:validation:Optional
	EventKey *string `json:"eventKey,omitempty" tf:"event_key,omitempty"`

	// (Boolean) Include units that did not send any events and set their value to 0.
	// Include units that did not send any events and set their value to 0.
	// +kubebuilder:validation:Optional
	IncludeUnitsWithoutEvents *bool `json:"includeUnitsWithoutEvents,omitempty" tf:"include_units_without_events,omitempty"`

	// (Boolean, Deprecated) Ignored. All metrics are considered active.
	// Ignored. All metrics are considered active.
	// +kubebuilder:validation:Optional
	IsActive *bool `json:"isActive,omitempty" tf:"is_active,omitempty"`

	// (Boolean) Whether a custom metric is a numeric metric or not.
	// Whether a `custom` metric is a numeric metric or not.
	// +kubebuilder:validation:Optional
	IsNumeric *bool `json:"isNumeric,omitempty" tf:"is_numeric,omitempty"`

	// (String) The unique key that references the metric. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The unique key that references the metric. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The metric type. Available choices are click, custom, and pageview. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The metric type. Available choices are `click`, `custom`, and `pageview`. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +kubebuilder:validation:Optional
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// set maintainer
	// The LaunchDarkly member ID of the member who will maintain the metric
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/account/v1alpha1.TeamMember
	// +kubebuilder:validation:Optional
	MaintainerID *string `json:"maintainerId,omitempty" tf:"maintainer_id,omitempty"`

	// Reference to a TeamMember in account to populate maintainerId.
	// +kubebuilder:validation:Optional
	MaintainerIDRef *v1.Reference `json:"maintainerIdRef,omitempty" tf:"-"`

	// Selector for a TeamMember in account to populate maintainerId.
	// +kubebuilder:validation:Optional
	MaintainerIDSelector *v1.Selector `json:"maintainerIdSelector,omitempty" tf:"-"`

	// friendly name for the metric.
	// The human-friendly name for the metric.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when analysis_type is percentile.
	// The percentile for the analysis method. An integer denoting the target percentile between 0 and 100. Required when analysis_type is percentile.
	// +kubebuilder:validation:Optional
	PercentileValue *float64 `json:"percentileValue,omitempty" tf:"percentile_value,omitempty"`

	// (String) The metrics's project key. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The metrics's project key. A change in this field will force the destruction of the existing resource and the creation of a new one. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/project/v1alpha1.Project
	// +kubebuilder:validation:Optional
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// Reference to a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeyRef *v1.Reference `json:"projectKeyRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeySelector *v1.Selector `json:"projectKeySelector,omitempty" tf:"-"`

	// (Set of String) A set of one or more context kinds that this metric can measure events from. Metrics can only use context kinds marked as "Available for experiments." For more information, read Allocating experiment audiences.
	// A set of one or more context kinds that this metric can measure events from. Metrics can only use context kinds marked as "Available for experiments." For more information, read [Allocating experiment audiences](https://docs.launchdarkly.com/home/creating-experiments/allocation).
	// +kubebuilder:validation:Optional
	// +listType=set
	RandomizationUnits []*string `json:"randomizationUnits,omitempty" tf:"randomization_units,omitempty"`

	// (String) The CSS selector for your metric (if click metric)
	// The CSS selector for your metric (if click metric)
	// +kubebuilder:validation:Optional
	Selector *string `json:"selector,omitempty" tf:"selector,omitempty"`

	// (String) The success criteria for your metric (if numeric metric). Available choices are HigherThanBaseline and LowerThanBaseline.
	// The success criteria for your metric (if numeric metric). Available choices are `HigherThanBaseline` and `LowerThanBaseline`.
	// +kubebuilder:validation:Optional
	SuccessCriteria *string `json:"successCriteria,omitempty" tf:"success_criteria,omitempty"`

	// (Set of String) Tags associated with your resource.
	// Tags associated with your resource.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (String)  The unit for numeric custom metrics.
	// (Required for kind `custom`) The unit for numeric `custom` metrics.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) The method by which multiple unit event values are aggregated. Available choices are average and sum.
	// The method by which multiple unit event values are aggregated. Available choices are `average` and `sum`.
	// +kubebuilder:validation:Optional
	UnitAggregationType *string `json:"unitAggregationType,omitempty" tf:"unit_aggregation_type,omitempty"`

	// (Block List) List of nested url blocks describing URLs that you want to associate with the metric. (see below for nested schema)
	// List of nested `url` blocks describing URLs that you want to associate with the metric.
	// +kubebuilder:validation:Optional
	Urls []UrlsParameters `json:"urls,omitempty" tf:"urls,omitempty"`
}

type UrlsInitParameters struct {

	// (String) The metric type. Available choices are click, custom, and pageview. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The URL type. Available choices are `exact`, `canonical`, `substring` and `regex`.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// (String)  The regex pattern to match by.
	// (Required for kind `regex`) The regex pattern to match by.
	Pattern *string `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (String)  The URL substring to match by.
	// (Required for kind `substring`) The URL substring to match by.
	Substring *string `json:"substring,omitempty" tf:"substring,omitempty"`

	// (String)  The exact or canonical URL.
	// (Required for kind `exact` and `canonical`) The exact or canonical URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type UrlsObservation struct {

	// (String) The metric type. Available choices are click, custom, and pageview. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The URL type. Available choices are `exact`, `canonical`, `substring` and `regex`.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// (String)  The regex pattern to match by.
	// (Required for kind `regex`) The regex pattern to match by.
	Pattern *string `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (String)  The URL substring to match by.
	// (Required for kind `substring`) The URL substring to match by.
	Substring *string `json:"substring,omitempty" tf:"substring,omitempty"`

	// (String)  The exact or canonical URL.
	// (Required for kind `exact` and `canonical`) The exact or canonical URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type UrlsParameters struct {

	// (String) The metric type. Available choices are click, custom, and pageview. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The URL type. Available choices are `exact`, `canonical`, `substring` and `regex`.
	// +kubebuilder:validation:Optional
	Kind *string `json:"kind" tf:"kind,omitempty"`

	// (String)  The regex pattern to match by.
	// (Required for kind `regex`) The regex pattern to match by.
	// +kubebuilder:validation:Optional
	Pattern *string `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (String)  The URL substring to match by.
	// (Required for kind `substring`) The URL substring to match by.
	// +kubebuilder:validation:Optional
	Substring *string `json:"substring,omitempty" tf:"substring,omitempty"`

	// (String)  The exact or canonical URL.
	// (Required for kind `exact` and `canonical`) The exact or canonical URL.
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

// MetricSpec defines the desired state of Metric
type MetricSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MetricParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MetricInitParameters `json:"initProvider,omitempty"`
}

// MetricStatus defines the observed state of Metric.
type MetricStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MetricObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Metric is the Schema for the Metrics API. Provides a LaunchDarkly metric resource. This resource allows you to create and manage metrics within your LaunchDarkly organization. To learn more about metrics and experimentation, read Experimentation Documentation https://docs.launchdarkly.com/home/experimentation.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,launchdarkly}
type Metric struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.key) || (has(self.initProvider) && has(self.initProvider.key))",message="spec.forProvider.key is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kind) || (has(self.initProvider) && has(self.initProvider.kind))",message="spec.forProvider.kind is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   MetricSpec   `json:"spec"`
	Status MetricStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MetricList contains a list of Metrics
type MetricList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Metric `json:"items"`
}

// Repository type metadata.
var (
	Metric_Kind             = "Metric"
	Metric_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Metric_Kind}.String()
	Metric_KindAPIVersion   = Metric_Kind + "." + CRDGroupVersion.String()
	Metric_GroupVersionKind = CRDGroupVersion.WithKind(Metric_Kind)
)

func init() {
	SchemeBuilder.Register(&Metric{}, &MetricList{})
}
