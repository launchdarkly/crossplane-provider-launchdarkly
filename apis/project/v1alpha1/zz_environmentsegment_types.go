// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClausesInitParameters struct {

	// (String) The user attribute to operate on
	// The user attribute to operate on
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this rule clause. If omitted, defaults to `user`.
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (Boolean) Whether to negate the rule clause.
	// Whether to negate the rule clause.
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) The operator associated with the rule clause. Available options are in, endsWith, startsWith, matches, contains, lessThan, lessThanOrEqual, greaterThanOrEqual, before, after, segmentMatch, semVerEqual, semVerLessThan, and semVerGreaterThan. Read LaunchDarkly's Operators documentation for more information.
	// The operator associated with the rule clause. Available options are `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`. Read LaunchDarkly's [Operators](https://docs.launchdarkly.com/sdk/concepts/flag-evaluation-rules#operators) documentation for more information.
	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	// (String) The type for each of the clause's values. Available types are boolean, string, and number. If omitted, value_type defaults to string.
	// The type for each of the clause's values. Available types are `boolean`, `string`, and `number`. If omitted, `value_type` defaults to `string`.
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// The list of values associated with the rule clause.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ClausesObservation struct {

	// (String) The user attribute to operate on
	// The user attribute to operate on
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this rule clause. If omitted, defaults to `user`.
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (Boolean) Whether to negate the rule clause.
	// Whether to negate the rule clause.
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) The operator associated with the rule clause. Available options are in, endsWith, startsWith, matches, contains, lessThan, lessThanOrEqual, greaterThanOrEqual, before, after, segmentMatch, semVerEqual, semVerLessThan, and semVerGreaterThan. Read LaunchDarkly's Operators documentation for more information.
	// The operator associated with the rule clause. Available options are `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`. Read LaunchDarkly's [Operators](https://docs.launchdarkly.com/sdk/concepts/flag-evaluation-rules#operators) documentation for more information.
	Op *string `json:"op,omitempty" tf:"op,omitempty"`

	// (String) The type for each of the clause's values. Available types are boolean, string, and number. If omitted, value_type defaults to string.
	// The type for each of the clause's values. Available types are `boolean`, `string`, and `number`. If omitted, `value_type` defaults to `string`.
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// The list of values associated with the rule clause.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ClausesParameters struct {

	// (String) The user attribute to operate on
	// The user attribute to operate on
	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this rule clause. If omitted, defaults to `user`.
	// +kubebuilder:validation:Optional
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (Boolean) Whether to negate the rule clause.
	// Whether to negate the rule clause.
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) The operator associated with the rule clause. Available options are in, endsWith, startsWith, matches, contains, lessThan, lessThanOrEqual, greaterThanOrEqual, before, after, segmentMatch, semVerEqual, semVerLessThan, and semVerGreaterThan. Read LaunchDarkly's Operators documentation for more information.
	// The operator associated with the rule clause. Available options are `in`, `endsWith`, `startsWith`, `matches`, `contains`, `lessThan`, `lessThanOrEqual`, `greaterThanOrEqual`, `before`, `after`, `segmentMatch`, `semVerEqual`, `semVerLessThan`, and `semVerGreaterThan`. Read LaunchDarkly's [Operators](https://docs.launchdarkly.com/sdk/concepts/flag-evaluation-rules#operators) documentation for more information.
	// +kubebuilder:validation:Optional
	Op *string `json:"op" tf:"op,omitempty"`

	// (String) The type for each of the clause's values. Available types are boolean, string, and number. If omitted, value_type defaults to string.
	// The type for each of the clause's values. Available types are `boolean`, `string`, and `number`. If omitted, `value_type` defaults to `string`.
	// +kubebuilder:validation:Optional
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// The list of values associated with the rule clause.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type EnvironmentSegmentInitParameters struct {

	// (String) The description of the segment's purpose.
	// The description of the segment's purpose.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The segment's environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The segment's environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/project/v1alpha1.Environment
	// +crossplane:generate:reference:extractor=github.com/launchdarkly/crossplane-provider-launchdarkly/config/extractors.FieldExtractor("key")
	EnvKey *string `json:"envKey,omitempty" tf:"env_key,omitempty"`

	// Reference to a Environment in project to populate envKey.
	// +kubebuilder:validation:Optional
	EnvKeyRef *v1.Reference `json:"envKeyRef,omitempty" tf:"-"`

	// Selector for a Environment in project to populate envKey.
	// +kubebuilder:validation:Optional
	EnvKeySelector *v1.Selector `json:"envKeySelector,omitempty" tf:"-"`

	// (List of String) List of user keys excluded from the segment. To target on other context kinds, use the excluded_contexts block attribute. This attribute is not valid when unbounded is set to true.
	// List of user keys excluded from the segment. To target on other context kinds, use the excluded_contexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	Excluded []*string `json:"excluded,omitempty" tf:"excluded,omitempty"`

	// user target objects excluded from the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of non-user target objects excluded from the segment. This attribute is not valid when `unbounded` is set to `true`.
	ExcludedContexts []ExcludedContextsInitParameters `json:"excludedContexts,omitempty" tf:"excluded_contexts,omitempty"`

	// (List of String) List of user keys included in the segment. To target on other context kinds, use the included_contexts block attribute. This attribute is not valid when unbounded is set to true.
	// List of user keys included in the segment. To target on other context kinds, use the included_contexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	Included []*string `json:"included,omitempty" tf:"included,omitempty"`

	// user target objects included in the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of non-user target objects included in the segment. This attribute is not valid when `unbounded` is set to `true`.
	IncludedContexts []IncludedContextsInitParameters `json:"includedContexts,omitempty" tf:"included_contexts,omitempty"`

	// (String) The unique key that references the segment. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The unique key that references the segment. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// friendly name for the segment.
	// The human-friendly name for the segment.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The segment's project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The segment's project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/project/v1alpha1.Project
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// Reference to a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeyRef *v1.Reference `json:"projectKeyRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeySelector *v1.Selector `json:"projectKeySelector,omitempty" tf:"-"`

	// (Block List) List of nested custom rule blocks to apply to the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of nested custom rule blocks to apply to the segment. This attribute is not valid when `unbounded` is set to `true`.
	Rules []RulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	// (Set of String) Tags associated with your resource.
	// Tags associated with your resource.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// based and smaller list-based segments. Big Segments include larger list-based segments and synced segments. Only use a Big Segment if you need to add more than 15,000 individual targets. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// Whether to create a standard segment (`false`) or a Big Segment (`true`). Standard segments include rule-based and smaller list-based segments. Big Segments include larger list-based segments and synced segments. Only use a Big Segment if you need to add more than 15,000 individual targets. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Unbounded *bool `json:"unbounded,omitempty" tf:"unbounded,omitempty"`

	// (String) For Big Segments, the targeted context kind. If this attribute is not specified it will default to user. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// For Big Segments, the targeted context kind. If this attribute is not specified it will default to `user`. A change in this field will force the destruction of the existing resource and the creation of a new one.
	UnboundedContextKind *string `json:"unboundedContextKind,omitempty" tf:"unbounded_context_kind,omitempty"`
}

type EnvironmentSegmentObservation struct {

	// (Number) The segment's creation date represented as a UNIX epoch timestamp.
	// The segment's creation date represented as a UNIX epoch timestamp.
	CreationDate *float64 `json:"creationDate,omitempty" tf:"creation_date,omitempty"`

	// (String) The description of the segment's purpose.
	// The description of the segment's purpose.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The segment's environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The segment's environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	EnvKey *string `json:"envKey,omitempty" tf:"env_key,omitempty"`

	// (List of String) List of user keys excluded from the segment. To target on other context kinds, use the excluded_contexts block attribute. This attribute is not valid when unbounded is set to true.
	// List of user keys excluded from the segment. To target on other context kinds, use the excluded_contexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	Excluded []*string `json:"excluded,omitempty" tf:"excluded,omitempty"`

	// user target objects excluded from the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of non-user target objects excluded from the segment. This attribute is not valid when `unbounded` is set to `true`.
	ExcludedContexts []ExcludedContextsObservation `json:"excludedContexts,omitempty" tf:"excluded_contexts,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (List of String) List of user keys included in the segment. To target on other context kinds, use the included_contexts block attribute. This attribute is not valid when unbounded is set to true.
	// List of user keys included in the segment. To target on other context kinds, use the included_contexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	Included []*string `json:"included,omitempty" tf:"included,omitempty"`

	// user target objects included in the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of non-user target objects included in the segment. This attribute is not valid when `unbounded` is set to `true`.
	IncludedContexts []IncludedContextsObservation `json:"includedContexts,omitempty" tf:"included_contexts,omitempty"`

	// (String) The unique key that references the segment. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The unique key that references the segment. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// friendly name for the segment.
	// The human-friendly name for the segment.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The segment's project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The segment's project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// (Block List) List of nested custom rule blocks to apply to the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of nested custom rule blocks to apply to the segment. This attribute is not valid when `unbounded` is set to `true`.
	Rules []RulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`

	// (Set of String) Tags associated with your resource.
	// Tags associated with your resource.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// based and smaller list-based segments. Big Segments include larger list-based segments and synced segments. Only use a Big Segment if you need to add more than 15,000 individual targets. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// Whether to create a standard segment (`false`) or a Big Segment (`true`). Standard segments include rule-based and smaller list-based segments. Big Segments include larger list-based segments and synced segments. Only use a Big Segment if you need to add more than 15,000 individual targets. A change in this field will force the destruction of the existing resource and the creation of a new one.
	Unbounded *bool `json:"unbounded,omitempty" tf:"unbounded,omitempty"`

	// (String) For Big Segments, the targeted context kind. If this attribute is not specified it will default to user. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// For Big Segments, the targeted context kind. If this attribute is not specified it will default to `user`. A change in this field will force the destruction of the existing resource and the creation of a new one.
	UnboundedContextKind *string `json:"unboundedContextKind,omitempty" tf:"unbounded_context_kind,omitempty"`
}

type EnvironmentSegmentParameters struct {

	// (String) The description of the segment's purpose.
	// The description of the segment's purpose.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The segment's environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The segment's environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/project/v1alpha1.Environment
	// +crossplane:generate:reference:extractor=github.com/launchdarkly/crossplane-provider-launchdarkly/config/extractors.FieldExtractor("key")
	// +kubebuilder:validation:Optional
	EnvKey *string `json:"envKey,omitempty" tf:"env_key,omitempty"`

	// Reference to a Environment in project to populate envKey.
	// +kubebuilder:validation:Optional
	EnvKeyRef *v1.Reference `json:"envKeyRef,omitempty" tf:"-"`

	// Selector for a Environment in project to populate envKey.
	// +kubebuilder:validation:Optional
	EnvKeySelector *v1.Selector `json:"envKeySelector,omitempty" tf:"-"`

	// (List of String) List of user keys excluded from the segment. To target on other context kinds, use the excluded_contexts block attribute. This attribute is not valid when unbounded is set to true.
	// List of user keys excluded from the segment. To target on other context kinds, use the excluded_contexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	// +kubebuilder:validation:Optional
	Excluded []*string `json:"excluded,omitempty" tf:"excluded,omitempty"`

	// user target objects excluded from the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of non-user target objects excluded from the segment. This attribute is not valid when `unbounded` is set to `true`.
	// +kubebuilder:validation:Optional
	ExcludedContexts []ExcludedContextsParameters `json:"excludedContexts,omitempty" tf:"excluded_contexts,omitempty"`

	// (List of String) List of user keys included in the segment. To target on other context kinds, use the included_contexts block attribute. This attribute is not valid when unbounded is set to true.
	// List of user keys included in the segment. To target on other context kinds, use the included_contexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	// +kubebuilder:validation:Optional
	Included []*string `json:"included,omitempty" tf:"included,omitempty"`

	// user target objects included in the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of non-user target objects included in the segment. This attribute is not valid when `unbounded` is set to `true`.
	// +kubebuilder:validation:Optional
	IncludedContexts []IncludedContextsParameters `json:"includedContexts,omitempty" tf:"included_contexts,omitempty"`

	// (String) The unique key that references the segment. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The unique key that references the segment. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// friendly name for the segment.
	// The human-friendly name for the segment.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The segment's project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// The segment's project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +crossplane:generate:reference:type=github.com/launchdarkly/crossplane-provider-launchdarkly/apis/project/v1alpha1.Project
	// +kubebuilder:validation:Optional
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// Reference to a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeyRef *v1.Reference `json:"projectKeyRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectKey.
	// +kubebuilder:validation:Optional
	ProjectKeySelector *v1.Selector `json:"projectKeySelector,omitempty" tf:"-"`

	// (Block List) List of nested custom rule blocks to apply to the segment. This attribute is not valid when unbounded is set to true. (see below for nested schema)
	// List of nested custom rule blocks to apply to the segment. This attribute is not valid when `unbounded` is set to `true`.
	// +kubebuilder:validation:Optional
	Rules []RulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	// (Set of String) Tags associated with your resource.
	// Tags associated with your resource.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// based and smaller list-based segments. Big Segments include larger list-based segments and synced segments. Only use a Big Segment if you need to add more than 15,000 individual targets. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// Whether to create a standard segment (`false`) or a Big Segment (`true`). Standard segments include rule-based and smaller list-based segments. Big Segments include larger list-based segments and synced segments. Only use a Big Segment if you need to add more than 15,000 individual targets. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +kubebuilder:validation:Optional
	Unbounded *bool `json:"unbounded,omitempty" tf:"unbounded,omitempty"`

	// (String) For Big Segments, the targeted context kind. If this attribute is not specified it will default to user. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// For Big Segments, the targeted context kind. If this attribute is not specified it will default to `user`. A change in this field will force the destruction of the existing resource and the creation of a new one.
	// +kubebuilder:validation:Optional
	UnboundedContextKind *string `json:"unboundedContextKind,omitempty" tf:"unbounded_context_kind,omitempty"`
}

type ExcludedContextsInitParameters struct {

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// List of target object keys included in or excluded from the segment.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ExcludedContextsObservation struct {

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// List of target object keys included in or excluded from the segment.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ExcludedContextsParameters struct {

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// +kubebuilder:validation:Optional
	ContextKind *string `json:"contextKind" tf:"context_kind,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// List of target object keys included in or excluded from the segment.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type IncludedContextsInitParameters struct {

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// List of target object keys included in or excluded from the segment.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type IncludedContextsObservation struct {

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	ContextKind *string `json:"contextKind,omitempty" tf:"context_kind,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// List of target object keys included in or excluded from the segment.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type IncludedContextsParameters struct {

	// (String) The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// The context kind associated with this segment target. To target on user contexts, use the included and excluded attributes.
	// +kubebuilder:validation:Optional
	ContextKind *string `json:"contextKind" tf:"context_kind,omitempty"`

	// (List of String) List of target object keys included in or excluded from the segment.
	// List of target object keys included in or excluded from the segment.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type RulesInitParameters struct {

	// (String) The attribute by which to group contexts together.
	// The attribute by which to group contexts together.
	BucketBy *string `json:"bucketBy,omitempty" tf:"bucket_by,omitempty"`

	// (Block List) List of nested blocks specifying the logical clauses to evaluate (see below for nested schema)
	// List of nested blocks specifying the logical clauses to evaluate
	Clauses []ClausesInitParameters `json:"clauses,omitempty" tf:"clauses,omitempty"`

	// (String) The context kind associated with this segment rule. This argument is only valid if weight is also specified. If omitted, defaults to user.
	// The context kind associated with this segment rule. This argument is only valid if `weight` is also specified. If omitted, defaults to `user`.
	RolloutContextKind *string `json:"rolloutContextKind,omitempty" tf:"rollout_context_kind,omitempty"`

	// (Number) The integer weight of the rule (between 1 and 100000).
	// The integer weight of the rule (between 1 and 100000).
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RulesObservation struct {

	// (String) The attribute by which to group contexts together.
	// The attribute by which to group contexts together.
	BucketBy *string `json:"bucketBy,omitempty" tf:"bucket_by,omitempty"`

	// (Block List) List of nested blocks specifying the logical clauses to evaluate (see below for nested schema)
	// List of nested blocks specifying the logical clauses to evaluate
	Clauses []ClausesObservation `json:"clauses,omitempty" tf:"clauses,omitempty"`

	// (String) The context kind associated with this segment rule. This argument is only valid if weight is also specified. If omitted, defaults to user.
	// The context kind associated with this segment rule. This argument is only valid if `weight` is also specified. If omitted, defaults to `user`.
	RolloutContextKind *string `json:"rolloutContextKind,omitempty" tf:"rollout_context_kind,omitempty"`

	// (Number) The integer weight of the rule (between 1 and 100000).
	// The integer weight of the rule (between 1 and 100000).
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RulesParameters struct {

	// (String) The attribute by which to group contexts together.
	// The attribute by which to group contexts together.
	// +kubebuilder:validation:Optional
	BucketBy *string `json:"bucketBy,omitempty" tf:"bucket_by,omitempty"`

	// (Block List) List of nested blocks specifying the logical clauses to evaluate (see below for nested schema)
	// List of nested blocks specifying the logical clauses to evaluate
	// +kubebuilder:validation:Optional
	Clauses []ClausesParameters `json:"clauses,omitempty" tf:"clauses,omitempty"`

	// (String) The context kind associated with this segment rule. This argument is only valid if weight is also specified. If omitted, defaults to user.
	// The context kind associated with this segment rule. This argument is only valid if `weight` is also specified. If omitted, defaults to `user`.
	// +kubebuilder:validation:Optional
	RolloutContextKind *string `json:"rolloutContextKind,omitempty" tf:"rollout_context_kind,omitempty"`

	// (Number) The integer weight of the rule (between 1 and 100000).
	// The integer weight of the rule (between 1 and 100000).
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

// EnvironmentSegmentSpec defines the desired state of EnvironmentSegment
type EnvironmentSegmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentSegmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentSegmentInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentSegmentStatus defines the observed state of EnvironmentSegment.
type EnvironmentSegmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentSegmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentSegment is the Schema for the EnvironmentSegments API. Provides a LaunchDarkly segment resource. This resource allows you to create and manage segments within your LaunchDarkly organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,launchdarkly}
type EnvironmentSegment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.key) || (has(self.initProvider) && has(self.initProvider.key))",message="spec.forProvider.key is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   EnvironmentSegmentSpec   `json:"spec"`
	Status EnvironmentSegmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentSegmentList contains a list of EnvironmentSegments
type EnvironmentSegmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentSegment `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentSegment_Kind             = "EnvironmentSegment"
	EnvironmentSegment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentSegment_Kind}.String()
	EnvironmentSegment_KindAPIVersion   = EnvironmentSegment_Kind + "." + CRDGroupVersion.String()
	EnvironmentSegment_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentSegment_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentSegment{}, &EnvironmentSegmentList{})
}
