//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalSettingsInitParameters) DeepCopyInto(out *ApprovalSettingsInitParameters) {
	*out = *in
	if in.CanApplyDeclinedChanges != nil {
		in, out := &in.CanApplyDeclinedChanges, &out.CanApplyDeclinedChanges
		*out = new(bool)
		**out = **in
	}
	if in.CanReviewOwnRequest != nil {
		in, out := &in.CanReviewOwnRequest, &out.CanReviewOwnRequest
		*out = new(bool)
		**out = **in
	}
	if in.MinNumApprovals != nil {
		in, out := &in.MinNumApprovals, &out.MinNumApprovals
		*out = new(float64)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovalTags != nil {
		in, out := &in.RequiredApprovalTags, &out.RequiredApprovalTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceConfig != nil {
		in, out := &in.ServiceConfig, &out.ServiceConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceKind != nil {
		in, out := &in.ServiceKind, &out.ServiceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalSettingsInitParameters.
func (in *ApprovalSettingsInitParameters) DeepCopy() *ApprovalSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApprovalSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalSettingsObservation) DeepCopyInto(out *ApprovalSettingsObservation) {
	*out = *in
	if in.CanApplyDeclinedChanges != nil {
		in, out := &in.CanApplyDeclinedChanges, &out.CanApplyDeclinedChanges
		*out = new(bool)
		**out = **in
	}
	if in.CanReviewOwnRequest != nil {
		in, out := &in.CanReviewOwnRequest, &out.CanReviewOwnRequest
		*out = new(bool)
		**out = **in
	}
	if in.MinNumApprovals != nil {
		in, out := &in.MinNumApprovals, &out.MinNumApprovals
		*out = new(float64)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovalTags != nil {
		in, out := &in.RequiredApprovalTags, &out.RequiredApprovalTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceConfig != nil {
		in, out := &in.ServiceConfig, &out.ServiceConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceKind != nil {
		in, out := &in.ServiceKind, &out.ServiceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalSettingsObservation.
func (in *ApprovalSettingsObservation) DeepCopy() *ApprovalSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ApprovalSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalSettingsParameters) DeepCopyInto(out *ApprovalSettingsParameters) {
	*out = *in
	if in.CanApplyDeclinedChanges != nil {
		in, out := &in.CanApplyDeclinedChanges, &out.CanApplyDeclinedChanges
		*out = new(bool)
		**out = **in
	}
	if in.CanReviewOwnRequest != nil {
		in, out := &in.CanReviewOwnRequest, &out.CanReviewOwnRequest
		*out = new(bool)
		**out = **in
	}
	if in.MinNumApprovals != nil {
		in, out := &in.MinNumApprovals, &out.MinNumApprovals
		*out = new(float64)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovalTags != nil {
		in, out := &in.RequiredApprovalTags, &out.RequiredApprovalTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceConfig != nil {
		in, out := &in.ServiceConfig, &out.ServiceConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceKind != nil {
		in, out := &in.ServiceKind, &out.ServiceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalSettingsParameters.
func (in *ApprovalSettingsParameters) DeepCopy() *ApprovalSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ApprovalSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClausesInitParameters) DeepCopyInto(out *ClausesInitParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClausesInitParameters.
func (in *ClausesInitParameters) DeepCopy() *ClausesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClausesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClausesObservation) DeepCopyInto(out *ClausesObservation) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClausesObservation.
func (in *ClausesObservation) DeepCopy() *ClausesObservation {
	if in == nil {
		return nil
	}
	out := new(ClausesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClausesParameters) DeepCopyInto(out *ClausesParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClausesParameters.
func (in *ClausesParameters) DeepCopy() *ClausesParameters {
	if in == nil {
		return nil
	}
	out := new(ClausesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultClientSideAvailabilityInitParameters) DeepCopyInto(out *DefaultClientSideAvailabilityInitParameters) {
	*out = *in
	if in.UsingEnvironmentID != nil {
		in, out := &in.UsingEnvironmentID, &out.UsingEnvironmentID
		*out = new(bool)
		**out = **in
	}
	if in.UsingMobileKey != nil {
		in, out := &in.UsingMobileKey, &out.UsingMobileKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultClientSideAvailabilityInitParameters.
func (in *DefaultClientSideAvailabilityInitParameters) DeepCopy() *DefaultClientSideAvailabilityInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultClientSideAvailabilityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultClientSideAvailabilityObservation) DeepCopyInto(out *DefaultClientSideAvailabilityObservation) {
	*out = *in
	if in.UsingEnvironmentID != nil {
		in, out := &in.UsingEnvironmentID, &out.UsingEnvironmentID
		*out = new(bool)
		**out = **in
	}
	if in.UsingMobileKey != nil {
		in, out := &in.UsingMobileKey, &out.UsingMobileKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultClientSideAvailabilityObservation.
func (in *DefaultClientSideAvailabilityObservation) DeepCopy() *DefaultClientSideAvailabilityObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultClientSideAvailabilityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultClientSideAvailabilityParameters) DeepCopyInto(out *DefaultClientSideAvailabilityParameters) {
	*out = *in
	if in.UsingEnvironmentID != nil {
		in, out := &in.UsingEnvironmentID, &out.UsingEnvironmentID
		*out = new(bool)
		**out = **in
	}
	if in.UsingMobileKey != nil {
		in, out := &in.UsingMobileKey, &out.UsingMobileKey
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultClientSideAvailabilityParameters.
func (in *DefaultClientSideAvailabilityParameters) DeepCopy() *DefaultClientSideAvailabilityParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultClientSideAvailabilityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestination) DeepCopyInto(out *EnvironmentDestination) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestination.
func (in *EnvironmentDestination) DeepCopy() *EnvironmentDestination {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentDestination) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestinationInitParameters) DeepCopyInto(out *EnvironmentDestinationInitParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvKey != nil {
		in, out := &in.EnvKey, &out.EnvKey
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = new(bool)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestinationInitParameters.
func (in *EnvironmentDestinationInitParameters) DeepCopy() *EnvironmentDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestinationList) DeepCopyInto(out *EnvironmentDestinationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentDestination, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestinationList.
func (in *EnvironmentDestinationList) DeepCopy() *EnvironmentDestinationList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestinationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentDestinationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestinationObservation) DeepCopyInto(out *EnvironmentDestinationObservation) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvKey != nil {
		in, out := &in.EnvKey, &out.EnvKey
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = new(bool)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestinationObservation.
func (in *EnvironmentDestinationObservation) DeepCopy() *EnvironmentDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestinationParameters) DeepCopyInto(out *EnvironmentDestinationParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvKey != nil {
		in, out := &in.EnvKey, &out.EnvKey
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.On != nil {
		in, out := &in.On, &out.On
		*out = new(bool)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestinationParameters.
func (in *EnvironmentDestinationParameters) DeepCopy() *EnvironmentDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestinationSpec) DeepCopyInto(out *EnvironmentDestinationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestinationSpec.
func (in *EnvironmentDestinationSpec) DeepCopy() *EnvironmentDestinationSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestinationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDestinationStatus) DeepCopyInto(out *EnvironmentDestinationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDestinationStatus.
func (in *EnvironmentDestinationStatus) DeepCopy() *EnvironmentDestinationStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDestinationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.ApprovalSettings != nil {
		in, out := &in.ApprovalSettings, &out.ApprovalSettings
		*out = make([]ApprovalSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfirmChanges != nil {
		in, out := &in.ConfirmChanges, &out.ConfirmChanges
		*out = new(bool)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTrackEvents != nil {
		in, out := &in.DefaultTrackEvents, &out.DefaultTrackEvents
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.RequireComments != nil {
		in, out := &in.RequireComments, &out.RequireComments
		*out = new(bool)
		**out = **in
	}
	if in.SecureMode != nil {
		in, out := &in.SecureMode, &out.SecureMode
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentList) DeepCopyInto(out *EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentList.
func (in *EnvironmentList) DeepCopy() *EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.ApprovalSettings != nil {
		in, out := &in.ApprovalSettings, &out.ApprovalSettings
		*out = make([]ApprovalSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfirmChanges != nil {
		in, out := &in.ConfirmChanges, &out.ConfirmChanges
		*out = new(bool)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTrackEvents != nil {
		in, out := &in.DefaultTrackEvents, &out.DefaultTrackEvents
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.RequireComments != nil {
		in, out := &in.RequireComments, &out.RequireComments
		*out = new(bool)
		**out = **in
	}
	if in.SecureMode != nil {
		in, out := &in.SecureMode, &out.SecureMode
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.ApprovalSettings != nil {
		in, out := &in.ApprovalSettings, &out.ApprovalSettings
		*out = make([]ApprovalSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfirmChanges != nil {
		in, out := &in.ConfirmChanges, &out.ConfirmChanges
		*out = new(bool)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTrackEvents != nil {
		in, out := &in.DefaultTrackEvents, &out.DefaultTrackEvents
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.RequireComments != nil {
		in, out := &in.RequireComments, &out.RequireComments
		*out = new(bool)
		**out = **in
	}
	if in.SecureMode != nil {
		in, out := &in.SecureMode, &out.SecureMode
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegment) DeepCopyInto(out *EnvironmentSegment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegment.
func (in *EnvironmentSegment) DeepCopy() *EnvironmentSegment {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentSegment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegmentInitParameters) DeepCopyInto(out *EnvironmentSegmentInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnvKey != nil {
		in, out := &in.EnvKey, &out.EnvKey
		*out = new(string)
		**out = **in
	}
	if in.Excluded != nil {
		in, out := &in.Excluded, &out.Excluded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedContexts != nil {
		in, out := &in.ExcludedContexts, &out.ExcludedContexts
		*out = make([]ExcludedContextsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Included != nil {
		in, out := &in.Included, &out.Included
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedContexts != nil {
		in, out := &in.IncludedContexts, &out.IncludedContexts
		*out = make([]IncludedContextsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unbounded != nil {
		in, out := &in.Unbounded, &out.Unbounded
		*out = new(bool)
		**out = **in
	}
	if in.UnboundedContextKind != nil {
		in, out := &in.UnboundedContextKind, &out.UnboundedContextKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegmentInitParameters.
func (in *EnvironmentSegmentInitParameters) DeepCopy() *EnvironmentSegmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegmentList) DeepCopyInto(out *EnvironmentSegmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentSegment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegmentList.
func (in *EnvironmentSegmentList) DeepCopy() *EnvironmentSegmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentSegmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegmentObservation) DeepCopyInto(out *EnvironmentSegmentObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnvKey != nil {
		in, out := &in.EnvKey, &out.EnvKey
		*out = new(string)
		**out = **in
	}
	if in.Excluded != nil {
		in, out := &in.Excluded, &out.Excluded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedContexts != nil {
		in, out := &in.ExcludedContexts, &out.ExcludedContexts
		*out = make([]ExcludedContextsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Included != nil {
		in, out := &in.Included, &out.Included
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedContexts != nil {
		in, out := &in.IncludedContexts, &out.IncludedContexts
		*out = make([]IncludedContextsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unbounded != nil {
		in, out := &in.Unbounded, &out.Unbounded
		*out = new(bool)
		**out = **in
	}
	if in.UnboundedContextKind != nil {
		in, out := &in.UnboundedContextKind, &out.UnboundedContextKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegmentObservation.
func (in *EnvironmentSegmentObservation) DeepCopy() *EnvironmentSegmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegmentParameters) DeepCopyInto(out *EnvironmentSegmentParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnvKey != nil {
		in, out := &in.EnvKey, &out.EnvKey
		*out = new(string)
		**out = **in
	}
	if in.Excluded != nil {
		in, out := &in.Excluded, &out.Excluded
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedContexts != nil {
		in, out := &in.ExcludedContexts, &out.ExcludedContexts
		*out = make([]ExcludedContextsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Included != nil {
		in, out := &in.Included, &out.Included
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedContexts != nil {
		in, out := &in.IncludedContexts, &out.IncludedContexts
		*out = make([]IncludedContextsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Unbounded != nil {
		in, out := &in.Unbounded, &out.Unbounded
		*out = new(bool)
		**out = **in
	}
	if in.UnboundedContextKind != nil {
		in, out := &in.UnboundedContextKind, &out.UnboundedContextKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegmentParameters.
func (in *EnvironmentSegmentParameters) DeepCopy() *EnvironmentSegmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegmentSpec) DeepCopyInto(out *EnvironmentSegmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegmentSpec.
func (in *EnvironmentSegmentSpec) DeepCopy() *EnvironmentSegmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSegmentStatus) DeepCopyInto(out *EnvironmentSegmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSegmentStatus.
func (in *EnvironmentSegmentStatus) DeepCopy() *EnvironmentSegmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSegmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentStatus) DeepCopyInto(out *EnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentStatus.
func (in *EnvironmentStatus) DeepCopy() *EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentsApprovalSettingsInitParameters) DeepCopyInto(out *EnvironmentsApprovalSettingsInitParameters) {
	*out = *in
	if in.CanApplyDeclinedChanges != nil {
		in, out := &in.CanApplyDeclinedChanges, &out.CanApplyDeclinedChanges
		*out = new(bool)
		**out = **in
	}
	if in.CanReviewOwnRequest != nil {
		in, out := &in.CanReviewOwnRequest, &out.CanReviewOwnRequest
		*out = new(bool)
		**out = **in
	}
	if in.MinNumApprovals != nil {
		in, out := &in.MinNumApprovals, &out.MinNumApprovals
		*out = new(float64)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovalTags != nil {
		in, out := &in.RequiredApprovalTags, &out.RequiredApprovalTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceConfig != nil {
		in, out := &in.ServiceConfig, &out.ServiceConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceKind != nil {
		in, out := &in.ServiceKind, &out.ServiceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentsApprovalSettingsInitParameters.
func (in *EnvironmentsApprovalSettingsInitParameters) DeepCopy() *EnvironmentsApprovalSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentsApprovalSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentsApprovalSettingsObservation) DeepCopyInto(out *EnvironmentsApprovalSettingsObservation) {
	*out = *in
	if in.CanApplyDeclinedChanges != nil {
		in, out := &in.CanApplyDeclinedChanges, &out.CanApplyDeclinedChanges
		*out = new(bool)
		**out = **in
	}
	if in.CanReviewOwnRequest != nil {
		in, out := &in.CanReviewOwnRequest, &out.CanReviewOwnRequest
		*out = new(bool)
		**out = **in
	}
	if in.MinNumApprovals != nil {
		in, out := &in.MinNumApprovals, &out.MinNumApprovals
		*out = new(float64)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovalTags != nil {
		in, out := &in.RequiredApprovalTags, &out.RequiredApprovalTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceConfig != nil {
		in, out := &in.ServiceConfig, &out.ServiceConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceKind != nil {
		in, out := &in.ServiceKind, &out.ServiceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentsApprovalSettingsObservation.
func (in *EnvironmentsApprovalSettingsObservation) DeepCopy() *EnvironmentsApprovalSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentsApprovalSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentsApprovalSettingsParameters) DeepCopyInto(out *EnvironmentsApprovalSettingsParameters) {
	*out = *in
	if in.CanApplyDeclinedChanges != nil {
		in, out := &in.CanApplyDeclinedChanges, &out.CanApplyDeclinedChanges
		*out = new(bool)
		**out = **in
	}
	if in.CanReviewOwnRequest != nil {
		in, out := &in.CanReviewOwnRequest, &out.CanReviewOwnRequest
		*out = new(bool)
		**out = **in
	}
	if in.MinNumApprovals != nil {
		in, out := &in.MinNumApprovals, &out.MinNumApprovals
		*out = new(float64)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovalTags != nil {
		in, out := &in.RequiredApprovalTags, &out.RequiredApprovalTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceConfig != nil {
		in, out := &in.ServiceConfig, &out.ServiceConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceKind != nil {
		in, out := &in.ServiceKind, &out.ServiceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentsApprovalSettingsParameters.
func (in *EnvironmentsApprovalSettingsParameters) DeepCopy() *EnvironmentsApprovalSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentsApprovalSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentsInitParameters) DeepCopyInto(out *EnvironmentsInitParameters) {
	*out = *in
	if in.ApprovalSettings != nil {
		in, out := &in.ApprovalSettings, &out.ApprovalSettings
		*out = make([]EnvironmentsApprovalSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfirmChanges != nil {
		in, out := &in.ConfirmChanges, &out.ConfirmChanges
		*out = new(bool)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTrackEvents != nil {
		in, out := &in.DefaultTrackEvents, &out.DefaultTrackEvents
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequireComments != nil {
		in, out := &in.RequireComments, &out.RequireComments
		*out = new(bool)
		**out = **in
	}
	if in.SecureMode != nil {
		in, out := &in.SecureMode, &out.SecureMode
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentsInitParameters.
func (in *EnvironmentsInitParameters) DeepCopy() *EnvironmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentsObservation) DeepCopyInto(out *EnvironmentsObservation) {
	*out = *in
	if in.ApprovalSettings != nil {
		in, out := &in.ApprovalSettings, &out.ApprovalSettings
		*out = make([]EnvironmentsApprovalSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfirmChanges != nil {
		in, out := &in.ConfirmChanges, &out.ConfirmChanges
		*out = new(bool)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTrackEvents != nil {
		in, out := &in.DefaultTrackEvents, &out.DefaultTrackEvents
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequireComments != nil {
		in, out := &in.RequireComments, &out.RequireComments
		*out = new(bool)
		**out = **in
	}
	if in.SecureMode != nil {
		in, out := &in.SecureMode, &out.SecureMode
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentsObservation.
func (in *EnvironmentsObservation) DeepCopy() *EnvironmentsObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentsParameters) DeepCopyInto(out *EnvironmentsParameters) {
	*out = *in
	if in.ApprovalSettings != nil {
		in, out := &in.ApprovalSettings, &out.ApprovalSettings
		*out = make([]EnvironmentsApprovalSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfirmChanges != nil {
		in, out := &in.ConfirmChanges, &out.ConfirmChanges
		*out = new(bool)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTrackEvents != nil {
		in, out := &in.DefaultTrackEvents, &out.DefaultTrackEvents
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequireComments != nil {
		in, out := &in.RequireComments, &out.RequireComments
		*out = new(bool)
		**out = **in
	}
	if in.SecureMode != nil {
		in, out := &in.SecureMode, &out.SecureMode
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentsParameters.
func (in *EnvironmentsParameters) DeepCopy() *EnvironmentsParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedContextsInitParameters) DeepCopyInto(out *ExcludedContextsInitParameters) {
	*out = *in
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedContextsInitParameters.
func (in *ExcludedContextsInitParameters) DeepCopy() *ExcludedContextsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedContextsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedContextsObservation) DeepCopyInto(out *ExcludedContextsObservation) {
	*out = *in
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedContextsObservation.
func (in *ExcludedContextsObservation) DeepCopy() *ExcludedContextsObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludedContextsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedContextsParameters) DeepCopyInto(out *ExcludedContextsParameters) {
	*out = *in
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedContextsParameters.
func (in *ExcludedContextsParameters) DeepCopy() *ExcludedContextsParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedContextsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedContextsInitParameters) DeepCopyInto(out *IncludedContextsInitParameters) {
	*out = *in
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedContextsInitParameters.
func (in *IncludedContextsInitParameters) DeepCopy() *IncludedContextsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IncludedContextsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedContextsObservation) DeepCopyInto(out *IncludedContextsObservation) {
	*out = *in
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedContextsObservation.
func (in *IncludedContextsObservation) DeepCopy() *IncludedContextsObservation {
	if in == nil {
		return nil
	}
	out := new(IncludedContextsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedContextsParameters) DeepCopyInto(out *IncludedContextsParameters) {
	*out = *in
	if in.ContextKind != nil {
		in, out := &in.ContextKind, &out.ContextKind
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedContextsParameters.
func (in *IncludedContextsParameters) DeepCopy() *IncludedContextsParameters {
	if in == nil {
		return nil
	}
	out := new(IncludedContextsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInitParameters) DeepCopyInto(out *ProjectInitParameters) {
	*out = *in
	if in.DefaultClientSideAvailability != nil {
		in, out := &in.DefaultClientSideAvailability, &out.DefaultClientSideAvailability
		*out = make([]DefaultClientSideAvailabilityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environments != nil {
		in, out := &in.Environments, &out.Environments
		*out = make([]EnvironmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludeInSnippet != nil {
		in, out := &in.IncludeInSnippet, &out.IncludeInSnippet
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInitParameters.
func (in *ProjectInitParameters) DeepCopy() *ProjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectObservation) DeepCopyInto(out *ProjectObservation) {
	*out = *in
	if in.DefaultClientSideAvailability != nil {
		in, out := &in.DefaultClientSideAvailability, &out.DefaultClientSideAvailability
		*out = make([]DefaultClientSideAvailabilityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environments != nil {
		in, out := &in.Environments, &out.Environments
		*out = make([]EnvironmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeInSnippet != nil {
		in, out := &in.IncludeInSnippet, &out.IncludeInSnippet
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectObservation.
func (in *ProjectObservation) DeepCopy() *ProjectObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectParameters) DeepCopyInto(out *ProjectParameters) {
	*out = *in
	if in.DefaultClientSideAvailability != nil {
		in, out := &in.DefaultClientSideAvailability, &out.DefaultClientSideAvailability
		*out = make([]DefaultClientSideAvailabilityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environments != nil {
		in, out := &in.Environments, &out.Environments
		*out = make([]EnvironmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludeInSnippet != nil {
		in, out := &in.IncludeInSnippet, &out.IncludeInSnippet
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectParameters.
func (in *ProjectParameters) DeepCopy() *ProjectParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.BucketBy != nil {
		in, out := &in.BucketBy, &out.BucketBy
		*out = new(string)
		**out = **in
	}
	if in.Clauses != nil {
		in, out := &in.Clauses, &out.Clauses
		*out = make([]ClausesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutContextKind != nil {
		in, out := &in.RolloutContextKind, &out.RolloutContextKind
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.BucketBy != nil {
		in, out := &in.BucketBy, &out.BucketBy
		*out = new(string)
		**out = **in
	}
	if in.Clauses != nil {
		in, out := &in.Clauses, &out.Clauses
		*out = make([]ClausesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutContextKind != nil {
		in, out := &in.RolloutContextKind, &out.RolloutContextKind
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.BucketBy != nil {
		in, out := &in.BucketBy, &out.BucketBy
		*out = new(string)
		**out = **in
	}
	if in.Clauses != nil {
		in, out := &in.Clauses, &out.Clauses
		*out = make([]ClausesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutContextKind != nil {
		in, out := &in.RolloutContextKind, &out.RolloutContextKind
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}
